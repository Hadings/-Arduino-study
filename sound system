#include<TimerOne.h>

const int BUTTON_INT = 1;
const int SPEAKER=9;

//음계설정
#define NOTE_C 65
#define NOTE_D 73
#define NOTE_E 82
#define NOTE_F 87
#define NOTE_G 98
#define NOTE_A 110
#define NOTE_B 123

//인터럽트내에서값이변경될휘발성변수선언
volatile int key= NOTE_C;
volatile int octave_multiplier=1;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(SPEAKER, OUTPUT);

  //RISING EDGE를감지할수있도록 BUTTON_INT 핀신호를인터럽트로설정
  attachInterrupt(BUTTON_INT, changeKey, RISING);//타이머인터럽트설정
  Timer1.initialize(500000); //0.5초로타이머설정
  Timer1.attachInterrupt(changePitch); //타이머인터럽트가발생하면                 
  //changePitch() 실행
}

void changeKey(){
  octave_multiplier=1;
  if(key == NOTE_C)
     key = NOTE_D;
  else if(key == NOTE_D)
      key = NOTE_E;
  else if(key == NOTE_E)
      key = NOTE_F;
  else if(key == NOTE_F)
      key = NOTE_G;
  else if(key == NOTE_G)
      key = NOTE_A;
  else if(key == NOTE_A)
      key = NOTE_B;
  else if(key == NOTE_B)
      key = NOTE_C;
}
//타이머 인터럽트 실행
void changePitch(){    
  octave_multiplier = octave_multiplier*2;
  if(octave_multiplier>16) octave_multiplier= 1;
  tone(SPEAKER, key * octave_multiplier);
}

void loop() {
  // put your main code here, to run repeatedly:
  Serial.print("Key: ");    
  Serial.print(key);    
  Serial.print(" Multiplier: ");    
  Serial.print(octave_multiplier);   
  Serial.print(" Frequency: ");   
  Serial.println(key*octave_multiplier);    
  delay(100);
}
